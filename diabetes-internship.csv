"{ ""cells"": [ { ""cell_type"": ""code"", ""execution_count"": 1, ""id"": ""226a5611"", ""metadata"": {}, ""outputs"": [], ""source"": [ ""import pandas as pd\n"", ""import numpy as np\n"", ""import seaborn as sns\n"", ""from sklearn.model_selection"
"import train_test_split\n"", ""from sklearn.preprocessing import StandardScaler\n"", ""from sklearn.neighbors import KNeighborsClassifier\n"", ""from sklearn.metrics import confusion_matrix\n"", ""from sklearn.metrics import"
"f1_score\n"", ""from sklearn.metrics import accuracy_score\n"", ""from warnings import filterwarnings"" ] }, { ""cell_type"": ""code"", ""execution_count"": 2, ""id"": ""2a317ebe"", ""metadata"": {}, ""outputs"": [], ""source"": [ ""# Load the"
"dataset\n"", ""dataset = pd.read_csv(\""diabetes.csv\"")"" ] }, { ""cell_type"": ""code"", ""execution_count"": 3, ""id"": ""4980c45b"", ""metadata"": {}, ""outputs"": [ { ""data"": { ""text/html"": [ """
"\n"", ""\n"", ""\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"","
""" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", """
"Pregnancies Glucose BloodPressure SkinThickness Insulin BMI DiabetesPedigreeFunction Age Outcome"
"06                  148         72                    35                    0         33.6 0.627                                  50 1"
"11                  85          66                    29                    0         26.6 0.351                                  31 0"
"28                  183         64                    0                     0         23.3 0.672                                  32 1"
"31                  89          66                    23                    94        28.1 0.167                                  21 0"
"40                  137         40                    35                    168       43.1 2.288                                  33 1"
"\n"", """
""" ], ""text/plain"": [ "" Pregnancies Glucose BloodPressure SkinThickness Insulin BMI \\\n"", ""0 6 148 72 35 0 33.6 \n"", ""1 1 85 66 29 0 26.6 \n"", ""2 8 183 64 0 0 23.3 \n"", ""3 1 89 66 23 94 28.1 \n"", ""4 0 137 40 35 168 43.1 \n"", ""\n"", """
"DiabetesPedigreeFunction Age Outcome \n"", ""0 0.627 50 1 \n"", ""1 0.351 31 0 \n"", ""2 0.672 32 1 \n"", ""3 0.167 21 0 \n"", ""4 2.288 33 1 "" ] }, ""execution_count"": 3, ""metadata"": {}, ""output_type"": ""execute_result"" } ], ""source"": ["
"""dataset.head()"" ] }, { ""cell_type"": ""code"", ""execution_count"": 4, ""id"": ""3137ace1"", ""metadata"": {}, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""\n"", ""RangeIndex: 768 entries, 0 to 767\n"", ""Data columns (total"
"9 columns):\n"", "" # Column Non-Null Count Dtype \n"", ""--- ------ -------------- ----- \n"", "" 0 Pregnancies 768 non-null int64 \n"", "" 1 Glucose 768 non-null int64 \n"", "" 2 BloodPressure 768 non-null int64 \n"", "" 3 SkinThickness 768 non"
"null int64 \n"", "" 4 Insulin 768 non-null int64 \n"", "" 5 BMI 768 non-null float64\n"", "" 6 DiabetesPedigreeFunction 768 non-null float64\n"", "" 7 Age 768 non-null int64 \n"", "" 8 Outcome 768 non-null int64 \n"", ""dtypes: float64(2),"
"int64(7)\n"", ""memory usage: 54.1 KB\n"" ] } ], ""source"": [ ""# Display basic info about the dataset\n"", ""dataset.info()"" ] }, { ""cell_type"": ""code"", ""execution_count"": 5, ""id"": ""588ad589"", ""metadata"": {}, ""outputs"": [ { ""data"": {"
"""text/html"": [ """
"\n"", ""\n"", ""\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"","
""" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", """
"Pregnancies Glucose BloodPressure SkinThickness Insulin BMI DiabetesPedigreeFunction Age Outcome"
"763 10                  101         76                    48                   180       32.9 0.171                                   63 0"
"764 2                   122         70                    27                   0         36.8 0.340                                   27 0"
"765 5                   121         72                    23                   112       26.2 0.245                                   30 0"
"766 1                   126         60                    0                    0         30.1 0.349                                   47 1"
"767 1                   93          70                    31                   0         30.4 0.315                                   23 0"
"\n"", """
""" ], ""text/plain"": [ "" Pregnancies Glucose BloodPressure SkinThickness Insulin BMI \\\n"", ""763 10 101 76 48 180 32.9 \n"", ""764 2 122 70 27 0 36.8 \n"", ""765 5 121 72 23 112 26.2 \n"", ""766 1 126 60 0 0 30.1 \n"", ""767 1 93 70 31"
"0 30.4 \n"", ""\n"", "" DiabetesPedigreeFunction Age Outcome \n"", ""763 0.171 63 0 \n"", ""764 0.340 27 0 \n"", ""765 0.245 30 0 \n"", ""766 0.349 47 1 \n"", ""767 0.315 23 0 "" ] }, ""execution_count"": 5, ""metadata"": {}, ""output_type"":"
"""execute_result"" } ], ""source"": [ ""dataset.tail()"" ] }, { ""cell_type"": ""code"", ""execution_count"": 6, ""id"": ""6435a3c3"", ""metadata"": {}, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""Missing Values:\n"", "" Pregnancies"
"0\n"", ""Glucose 0\n"", ""BloodPressure 0\n"", ""SkinThickness 0\n"", ""Insulin 0\n"", ""BMI 0\n"", ""DiabetesPedigreeFunction 0\n"", ""Age 0\n"", ""Outcome 0\n"", ""dtype: int64\n"" ] } ], ""source"": [ ""# Check for missing values\n"","
"""missing_values = dataset.isna().sum()\n"", ""print(\""Missing Values:\\n\"", missing_values)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 7, ""id"": ""6b03e30f"", ""metadata"": {}, ""outputs"": [], ""source"": [ ""# Fill missing values with"
"median for numerical columns\n"", ""dataset['Glucose'].fillna(dataset['Glucose'].median(), inplace=True)\n"", ""dataset['BMI'].fillna(dataset['BMI'].median(), inplace=True)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 8, ""id"":"
"""fde7b2f3"", ""metadata"": {}, ""outputs"": [], ""source"": [ ""from scipy import stats"" ] }, { ""cell_type"": ""code"", ""execution_count"": 9, ""id"": ""9f54c290"", ""metadata"": {}, ""outputs"": [], ""source"": [ ""z_scores ="
"np.abs(stats.zscore(dataset[['Glucose', 'BloodPressure', 'BMI']]))\n"", ""threshold = 3\n"", ""outliers = (z_scores > threshold).any(axis=1)\n"", ""dataset = dataset[~outliers]"" ] }, { ""cell_type"": ""code"", ""execution_count"": 10, ""id"":"
"""bc093baa"", ""metadata"": {}, ""outputs"": [], ""source"": [ ""# Check for duplicates and remove them\n"", ""dataset.drop_duplicates(inplace=True)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 11, ""id"": ""1290246a"", ""metadata"": {},"
"""outputs"": [], ""source"": [ ""# Reset the index after data manipulation\n"", ""dataset.reset_index(drop=True, inplace=True)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 12, ""id"": ""334ed9b8"", ""metadata"": {}, ""outputs"": [], ""source"": ["
"""# Save the cleaned dataset to a new CSV file\n"", ""dataset.to_csv(\""cleaned_diabetes.csv\"", index=False)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 13, ""id"": ""b0ce249b"", ""metadata"": {}, ""outputs"": [ { ""data"": { ""text/html"": [ """
"\n"", ""\n"", ""\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"","
""" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"
"\n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", "" \n"", """
"Pregnancies Glucose BloodPressure SkinThickness Insulin                                           BMI        DiabetesPedigreeFunction                   Age        Outcome"
"count 721.000000           721.000000 721.000000                 721.000000           721.000000 721.000000 721.000000                                       721.00000 721.000000"
"mean 3.877947              121.790569 72.302358                  21.332871            84.313454 32.347295 0.471721                                           33.38835 0.342580"
"std 3.363460              30.736501 12.281088                   15.653989            117.074852 6.641613 0.324603                                           11.77493 0.474902"
"min 0.000000              44.000000 24.000000                   0.000000             0.000000 18.200000 0.078000                                            21.00000 0.000000"
"25% 1.000000              99.000000 64.000000                   0.000000             0.000000 27.500000 0.245000                                            24.00000 0.000000"
"50% 3.000000              117.000000 72.000000                  24.000000            48.000000 32.300000 0.378000                                           29.00000 0.000000"
"75% 6.000000              142.000000 80.000000                  33.000000            130.000000 36.600000 0.626000                                          41.00000 1.000000"
"max 17.000000 199.000000 122.000000                   99.000000       846.000000 55.000000 2.329000                             81.00000 1.000000"
"\n"", """
""" ], ""text/plain"": [ "" Pregnancies Glucose BloodPressure SkinThickness Insulin \\\n"", ""count 721.000000 721.000000 721.000000 721.000000 721.000000 \n"", ""mean 3.877947 121.790569 72.302358 21.332871 84.313454"
"\n"", ""std 3.363460 30.736501 12.281088 15.653989 117.074852 \n"", ""min 0.000000 44.000000 24.000000 0.000000 0.000000 \n"", ""25% 1.000000 99.000000 64.000000 0.000000 0.000000 \n"", ""50% 3.000000 117.000000"
"72.000000 24.000000 48.000000 \n"", ""75% 6.000000 142.000000 80.000000 33.000000 130.000000 \n"", ""max 17.000000 199.000000 122.000000 99.000000 846.000000 \n"", ""\n"", "" BMI DiabetesPedigreeFunction Age"
"Outcome \n"", ""count 721.000000 721.000000 721.00000 721.000000 \n"", ""mean 32.347295 0.471721 33.38835 0.342580 \n"", ""std 6.641613 0.324603 11.77493 0.474902 \n"", ""min 18.200000 0.078000 21.00000 0.000000"
"\n"", ""25% 27.500000 0.245000 24.00000 0.000000 \n"", ""50% 32.300000 0.378000 29.00000 0.000000 \n"", ""75% 36.600000 0.626000 41.00000 1.000000 \n"", ""max 55.000000 2.329000 81.00000 1.000000 "" ] },"
"""execution_count"": 13, ""metadata"": {}, ""output_type"": ""execute_result"" } ], ""source"": [ ""dataset.describe()"" ] }, { ""cell_type"": ""code"", ""execution_count"": 14, ""id"": ""63c5cae5"", ""metadata"": {}, ""outputs"": [], ""source"": [ ""from"
"matplotlib import pyplot as plt"" ] }, { ""cell_type"": ""code"", ""execution_count"": 15, ""id"": ""5848c9af"", ""metadata"": {}, ""outputs"": [ { ""data"": { ""image/png"":"
"""iVBORw0KGgoAAAANSUhEUgAAAigAAAGdCAYAAAA44ojeAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACXBIWXMAAA9hAAAPYQGoP"
"""text/plain"": [ """
""
""" ] }, ""metadata"": {}, ""output_type"": ""display_data"" } ], ""source"": [ ""dataset[\""Age\""].hist()\n"", ""plt.show()"" ] }, { ""cell_type"": ""code"", ""execution_count"": 35, ""id"": ""2a4bb171"", ""metadata"": {}, ""outputs"": [ { ""data"": {"
"""image/png"":"
"""iVBORw0KGgoAAAANSUhEUgAAAqYAAAH9CAYAAADI2r42AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACXBIWXMAAA9hAAAPY"
"""text/plain"": [ """
""
""" ] }, ""metadata"": {}, ""output_type"": ""display_data"" } ], ""source"": [ ""dataset[\""Insulin\""].hist()\n"", ""plt.show()"" ] }, { ""cell_type"": ""code"", ""execution_count"": 16, ""id"": ""418ff679"", ""metadata"": {}, ""outputs"": [],"
"""source"": [ ""# Impute missing values\n"", ""columns_to_impute = ['Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI']\n"", ""for column in columns_to_impute:\n"", "" dataset[column].replace(0,"
"np.nan, inplace=True)\n"", "" median_value = dataset[column].median()\n"", "" dataset[column].fillna(median_value, inplace=True)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 17, ""id"": ""dac8929e"","
"""metadata"": {}, ""outputs"": [ { ""data"": { ""image/png"":"
"""iVBORw0KGgoAAAANSUhEUgAAAz8AAAJPCAYAAABSAGo2AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACXBIWXMAAA9h"
"""text/plain"": [ """
""
""" ] }, ""metadata"": {}, ""output_type"": ""display_data"" } ], ""source"": [ ""# Check for outliers using box plots\n"", ""plt.figure(figsize=(10, 6))\n"", ""dataset.boxplot(column=columns_to_impute)\n"","
"""plt.title(\""Boxplots for Columns with Outliers\"")\n"", ""plt.xticks(rotation=45)\n"", ""plt.show()"" ] }, { ""cell_type"": ""code"", ""execution_count"": 18, ""id"": ""b6293cc9"", ""metadata"": {}, ""outputs"": [],"
"""source"": [ ""import warnings"" ] }, { ""cell_type"": ""code"", ""execution_count"": 19, ""id"": ""515ee715"", ""metadata"": {}, ""outputs"": [ { ""name"": ""stderr"", ""output_type"": ""stream"", ""text"": ["
"""C:\\Users\\hp\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional"
"argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n"", "" warnings.warn(\n"" ] }, { ""data"": { ""image/png"":"
"""iVBORw0KGgoAAAANSUhEUgAAAjsAAAGwCAYAAABPSaTdAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACXBIWXMA"
"""text/plain"": [ """
""
""" ] }, ""metadata"": {}, ""output_type"": ""display_data"" } ], ""source"": [ ""sns.countplot(dataset[\""Outcome\""])\n"", ""plt.show()"" ] }, { ""cell_type"": ""code"", ""execution_count"": 20, ""id"":"
"""a8aed116"", ""metadata"": {}, ""outputs"": [ { ""name"": ""stderr"", ""output_type"": ""stream"", ""text"": [ ""C:\\Users\\hp\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36:"
"FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an"
"explicit keyword will result in an error or misinterpretation.\n"", "" warnings.warn(\n"" ] }, { ""data"": { ""image/png"":"
"""iVBORw0KGgoAAAANSUhEUgAAAjsAAAGwCAYAAABPSaTdAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACXBIW"
"""text/plain"": [ """
""
""" ] }, ""metadata"": {}, ""output_type"": ""display_data"" } ], ""source"": [ ""sns.countplot(dataset[\""Pregnancies\""],label=\""Count\"")\n"", ""plt.show()"" ] }, { ""cell_type"": ""code"","
"""execution_count"": 21, ""id"": ""d27df887"", ""metadata"": {}, ""outputs"": [ { ""data"": { ""text/plain"": [ ""0 1\n"", ""1 0\n"", ""2 1\n"", ""3 0\n"", ""4 1\n"", ""Name: Outcome, dtype: int64"" ] },"
"""execution_count"": 21, ""metadata"": {}, ""output_type"": ""execute_result"" } ], ""source"": [ ""Y=dataset.iloc[:,8]\n"", ""Y.head()"" ] }, { ""cell_type"": ""code"", ""execution_count"": 22,"
"""id"": ""45b5e23f"", ""metadata"": {}, ""outputs"": [ { ""data"": { ""image/png"":"
"""iVBORw0KGgoAAAANSUhEUgAAAigAAAGdCAYAAAA44ojeAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACX"
"""text/plain"": [ """
""
""" ] }, ""metadata"": {}, ""output_type"": ""display_data"" } ], ""source"": [ ""dataset[\""Glucose\""].hist()\n"", ""plt.show()"" ] }, { ""cell_type"": ""code"", ""execution_count"": 23,"
"""id"": ""5b9ab97f"", ""metadata"": {}, ""outputs"": [ { ""data"": { ""image/png"":"
"""iVBORw0KGgoAAAANSUhEUgAAAigAAAGdCAYAAAA44ojeAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAA"
"""text/plain"": [ """
""
""" ] }, ""metadata"": {}, ""output_type"": ""display_data"" } ], ""source"": [ ""dataset[\""BloodPressure\""].hist()\n"", ""plt.show()"" ] }, { ""cell_type"": ""code"","
"""execution_count"": 37, ""id"": ""64f1898d"", ""metadata"": {}, ""outputs"": [ { ""name"": ""stderr"", ""output_type"": ""stream"", ""text"": ["
"""C:\\Users\\hp\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x."
"From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an"
"error or misinterpretation.\n"", "" warnings.warn(\n"" ] }, { ""data"": { ""image/png"":"
"""iVBORw0KGgoAAAANSUhEUgAABR4AAANFCAYAAAAdxuBJAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qN"
"""text/plain"": [ """
""
""" ] }, ""metadata"": {}, ""output_type"": ""display_data"" } ], ""source"": [ ""plt.figure(figsize = (16,10))\n"", ""ax ="
"sns.countplot(dataset['BloodPressure'])"" ] }, { ""cell_type"": ""code"", ""execution_count"": 25, ""id"": ""236a71d7"", ""metadata"": {}, ""outputs"":"
"[], ""source"": [ ""# split dataset\n"", ""X = dataset.iloc[:, 0:8]\n"", ""y = dataset.iloc[:, 8]\n"", ""X_train, X_test, y_train, y_test ="
"train_test_split(X, y, random_state=0, test_size=0.2)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 26, ""id"": ""a06c852e"", ""metadata"":"
"{}, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""576\n"", ""576\n"", ""145\n"", ""145\n"" ] } ], ""source"": ["
"""print(len(X_train))\n"", ""print(len(y_train))\n"", ""print(len(X_test))\n"", ""print(len(y_test))"" ] }, { ""cell_type"": ""code"", ""execution_count"": 27,"
"""id"": ""6ae4ef61"", ""metadata"": {}, ""outputs"": [], ""source"": [ ""#Feature scaling\n"", ""sc_X = StandardScaler()\n"", ""X_train ="
"sc_X.fit_transform(X_train)\n"", ""X_test = sc_X.transform(X_test)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 28, ""id"": ""38a8e045"","
"""metadata"": {}, ""outputs"": [], ""source"": [ ""# Define the model: Init K-NN\n"", ""classifier = KNeighborsClassifier(n_neighbors=11,"
"p=2,metric='euclidean')"" ] }, { ""cell_type"": ""code"", ""execution_count"": 29, ""id"": ""4c83733b"", ""metadata"": {}, ""outputs"": [ { ""data"": {"
"""text/plain"": [ ""KNeighborsClassifier(metric='euclidean', n_neighbors=11)"" ] }, ""execution_count"": 29, ""metadata"": {}, ""output_type"":"
"""execute_result"" } ], ""source"": [ ""# Fit Model\n"", ""classifier.fit(X_train, y_train)"" ] }, { ""cell_type"": ""code"", ""execution_count"": 30, ""id"":"
"""1bbebf2f"", ""metadata"": {}, ""outputs"": [ { ""name"": ""stderr"", ""output_type"": ""stream"", ""text"": [ ""C:\\Users\\hp\\anaconda3\\lib\\site-"
"packages\\sklearn\\neighbors\\_classification.py:228: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the"
"default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of"
"`keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be"
"accepted. Set `keepdims` to True or False to avoid this warning.\n"", "" mode, _ = stats.mode(_y[neigh_ind, k], axis=1)\n"" ] }, { ""data"":"
"{ ""text/plain"": [ ""array([1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n"", "" 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,"
"1, 1, 0,\n"", "" 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0,\n"", "" 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1,\n"","
""" 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n"", "" 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n"", "" 0, 0, 0,"
"0, 0, 0, 0, 0, 0, 1, 1, 0, 0], dtype=int64)"" ] }, ""execution_count"": 30, ""metadata"": {}, ""output_type"": ""execute_result"" } ], ""source"": [ ""#"
"Predict the test set results\n"", ""y_pred = classifier.predict(X_test)\n"", ""y_pred"" ] }, { ""cell_type"": ""code"", ""execution_count"": 31, ""id"":"
"""9962c2c3"", ""metadata"": {}, ""outputs"": [ { ""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""[[83 18]\n"", "" [14 30]]\n"","
"""0.6521739130434783\n"" ] } ], ""source"": [ ""# Evaluate Model\n"", ""cm = confusion_matrix(y_test, y_pred)\n"", ""print (cm)\n"","
"""print(f1_score(y_test, y_pred))"" ] }, { ""cell_type"": ""code"", ""execution_count"": 32, ""id"": ""784ca459"", ""metadata"": {}, ""outputs"": [ {"
"""name"": ""stdout"", ""output_type"": ""stream"", ""text"": [ ""0.7793103448275862\n"" ] } ], ""source"": [ ""# Assuming y_test contains the actual"
"labels and y_pred contains the predicted labels\n"", ""print(accuracy_score(y_test, y_pred))"" ] }, { ""cell_type"": ""code"","
"""execution_count"": null, ""id"": ""bb7f37a4"", ""metadata"": {}, ""outputs"": [], ""source"": [] } ], ""metadata"": { ""kernelspec"": { ""display_name"":"
"""Python 3 (ipykernel)"", ""language"": ""python"", ""name"": ""python3"" }, ""language_info"": { ""codemirror_mode"": { ""name"": ""ipython"","
"""version"": 3 }, ""file_extension"": "".py"", ""mimetype"": ""text/x-python"", ""name"": ""python"", ""nbconvert_exporter"": ""python"","
"""pygments_lexer"": ""ipython3"", ""version"": ""3.9.13"" } }, ""nbformat"": 4, ""nbformat_minor"": 5 }"
""
